package app;


/*КЛАСС "Camera" ИСПОЛЬЗУЕТСЯ ДЛЯ УПРАВЛЕНИЯ ОТОБРАЖЕНИЕМ ВИДИМОГО МИРА (видимого лол)
    СОДЕРЖИТ ССЫЛКИ "World" и "Player" на всякий случай для удобства пользования,
    "x" и "y" координаты камеры. Отличие от предыдущих коммитов здесь в том, что тогда
    перемещался мир вокруг игрока, который был в центре. В этой версии мир стоит на месте, а все кто могут - перемещаются
    в нём, также и камера, поэтому тут может быть более гибкая настройка геймплэя.
    МЕТОД "Tick()" из интерфейса "Tickable" запускается каждый раз в цикле логики всего мира.
    Каждый вызов "Tick()" у камеры это вызов метода "move" через интерфейс "CameraMove", который служит для
    создания различных вариантов управления движением камеры.
    Из кода можно находу менять режимы движения камеры. Пока тут 2 режима:
    Первый "CameraMoveForPlayer" и он заставляет камеру двигаться за игроком
    Второй "CameraMovePatrol" и он заставляет камеру двигаться то вправо, то влево относительно какой-то точки

    Можно создавать другие варианты движений камеры
 */

public class Camera  implements Tickable {
    int x, y;
    World world;
    Player player;

    public Camera(World world, Player player, int x, int y) {
        super();
        this.x = x;
        this.y = y;
        this.world = world;
        this.player = player;
        this.world.camera = this;
    }

    CameraMove camMove = new CameraMoveForPlayer(this);
    @Override
    public void tick() {
        camMove.move();
    }


}
